{"version":3,"sources":["components/PriceVolumeChart.js","components/PriceTable.js","App.js","serviceWorker.js","index.js"],"names":["PriceVolumeChart","props","node","React","createRef","margin","top","right","left","bottom","xbuffer","period","chartWidth","width","xScale","d3","domain","data","d","ts","range","d1","d0","Date","setFullYear","getFullYear","transform","scale","translate","legendFormat","gpFormat","gp","volFormat","candleData","generateCandlestickData","rsiData","generateRSI","smaData","generateSimpleMovingAverage","candleHeight","height","priceHeight","volumeHeight","rsiHeight","stochRsiHeight","green","red","text","grid","state","currentDate","zoomed","bind","drawChart","renderCandleLegend","renderVolumeLegend","renderPriceLegend","renderChartTitle","currentScale","rescaleX","prevProps","prevState","this","interpolate","ref","renderRSILegend","renderStochRSILegend","renderTooltip","metadata","className","src","icon","alt","name","length","hi","low","open","close","currCandle","find","start","end","high","style","replace","daily","average","curr","volume","options","year","month","day","toLocaleDateString","rsi","value","k","stoch","chartArea","chartHeight","candlestickChart","append","attr","updateCandlestickChart","priceChart","updatePriceChart","volumeChart","updateVolumeChart","rsiChart","updateRSIChart","stochRsiChart","updateStochRSIChart","xMin","invert","xMax","visibleData","filter","yMin","yMax","yScale","Math","max","select","call","tickSize","tickPadding","ticks","tickFormat","selectAll","id","join","enter","group","abs","update","exit","remove","map","avg","e","min","dailyLine","x","y","averageLine","rsiLine","upperBoundLine","lowerBoundLine","stochRsiLine","bandwidth","div","current","svg","candlestickArea","priceArea","volumeArea","rsiArea","stochRsiArea","buildCandlestickChart","buildPriceChart","buildVolumeChart","buildRSIChart","buildStochRSIChart","crosshair","classed","that","bisectDate","generateCrosshair","console","log","mouseX","date","i","setState","on","zoomCrosshair","maxScale","getTime","zoom","scaleExtent","extent","translateExtent","Infinity","prices","avgGain","avgLoss","change","index","val","push","isNaN","StochasticRSI","calculate","values","rsiPeriod","stochasticPeriod","kPeriod","dPeriod","startIndex","result","initAverage","forEach","slice","reduce","a","b","condensed","frame","candle","total","type","newXScale","Component","Table","onSelect","selected","formatGp","pgSize","expanded","basicColumns","Header","accessor","Cell","row","marginBottom","original","sortType","row1","row2","z","cell","expandedColumns","high_alch_profit","columns","useMemo","concat","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","pageOptions","page","previousPage","nextPage","canPreviousPage","canNextPage","TableHead","headerGroup","TableRow","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","TableBody","onClick","getRowProps","cells","getCellProps","Button","disabled","PriceTable","theme","createMuiTheme","palette","primary","500","TABLE_HEIGHT","ThemeProvider","Input","placeholder","onKeyDown","which","shiftKey","filterSidebar","toggleExpand","faWindowMinimize","faWindowMaximize","CssBaseline","items","activeItemId","round","App","loading","priceData","sidebarItems","filteredItems","chart","onResize","onSidebarSelect","processMetadata","window","addEventListener","fetch","then","response","json","prev","innerWidth","innerHeight","itemMap","nat","item_id","item","price","buy_limit","high_alch","oneDayChange","oneWeekChange","oneMonthChange","sort","target","toLowerCase","newItems","includes","renderLoadingAnimation","chartData","position","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c612c259.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport { SMA, RSI, StochasticRSI } from \"technicalindicators\";\n\nclass PriceVolumeChart extends Component {\n\n  constructor(props) {\n    super(props);\n    this.node = React.createRef();\n    this.margin = { top: 20, right: 60, left: 20, bottom: 20, xbuffer: 20 };\n    this.period = 7;\n\n    this.chartWidth = this.props.width - this.margin.left - this.margin.right;\n\n    this.xScale = d3\n      .scaleUtc()\n      .domain(d3.extent(this.props.data, d => d.ts))\n      .range([0, this.chartWidth]);\n            \n    // Set inital date range to last year worth of data\n    let d1 = d3.max(this.props.data, d => d.ts);\n    let d0 = new Date(d1);\n    d0.setFullYear(d1.getFullYear() - 1);\n\n    this.transform = d3.zoomIdentity\n      .scale(this.chartWidth / (this.xScale(d1) - this.xScale(d0)))\n      .translate(-this.xScale(d0), 0)\n\n    this.legendFormat = d3.format(\".3~s\");\n    this.gpFormat = gp => `${d3.format(\".3~s\")(gp)} gp`;\n    this.volFormat = d3.format(\".3~s\");\n\n    this.candleData = this.generateCandlestickData(this.props.data, this.period);\n    this.rsiData = this.generateRSI(this.props.data, 14);\n    this.smaData = this.generateSimpleMovingAverage(this.props.data, 14);\n\n    // Chart ratios \n    this.candleHeight = 0.35 * this.props.height;\n    this.priceHeight = 0.25 * this.props.height;\n    this.volumeHeight = 0.1333 * this.props.height;\n    this.rsiHeight = 0.1333 * this.props.height;\n    this.stochRsiHeight = 0.1333 * this.props.height;\n    \n    // Chart colors\n    this.green = \"#60d68a\";\n    this.red = \"#d66061\";\n    this.text = \"#e7e7e7\";\n    this.grid = \"#777777\";\n    \n    this.state = {\n      currentDate: null\n    }\n\n    this.zoomed = this.zoomed.bind(this);\n    this.drawChart = this.drawChart.bind(this);\n    this.renderCandleLegend = this.renderCandleLegend.bind(this);\n    this.renderVolumeLegend = this.renderVolumeLegend.bind(this);\n    this.renderPriceLegend = this.renderPriceLegend.bind(this);\n    this.renderChartTitle = this.renderChartTitle.bind(this);\n\n    this.state = {\n      currentDate: null,\n      currentScale: this.transform.rescaleX(this.xScale)\n    }\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      if (prevProps.data !== this.props.data) {\n        this.candleData = this.generateCandlestickData(this.props.data, this.period);\n        this.rsiData = this.generateRSI(this.props.data, 14);\n        this.smaData = this.generateSimpleMovingAverage(this.props.data, 14);\n      }\n      this.chartWidth = this.props.width - this.margin.left - this.margin.right\n      this.xScale = d3\n        .scaleUtc()\n        .domain(d3.extent(this.props.data, d => d.ts))\n        .range([0, this.chartWidth]).interpolate(d3.interpolateNumber);\n\n      this.drawChart(this.props.height);\n    }\n  }\n\n  componentDidMount() {\n    this.drawChart(this.props.height);\n  }\n\n  render() {\n    return <><div ref={this.node} />\n      {this.renderRSILegend()}\n      {this.renderStochRSILegend()}\n      {this.renderCandleLegend()}\n      {this.renderPriceLegend()}\n      {this.renderVolumeLegend()}\n      {this.renderTooltip()}\n    </>;\n  }\n\n  renderChartTitle() {\n    const { metadata } = this.props;\n    return (\n      <div className=\"ChartTitle\">\n        <img className=\"LegendIcon\" src={metadata.icon} alt={metadata.name}></img>\n        <div className=\"ItemName\">{metadata.name}</div>\n      </div>\n    );\n\n  }\n\n  renderCandleLegend() {\n    let { currentDate } = this.state;\n    const { metadata } = this.props;\n\n    if (currentDate === null) {\n      currentDate = this.props.data[this.props.data.length - 1].ts;\n    }\n\n    let currCandle = this.candleData.find(d => d.start <= currentDate && d.end >= currentDate);\n\n    let hi, low, open, close;\n    if (currCandle) {\n      hi = currCandle.high;\n      low = currCandle.low;\n      open = currCandle.open;\n      close = currCandle.close;\n    } else {\n      return <div className=\"Legend\" style={{\"display\" : \"none\"}}></div>\n    }\n\n    return (\n      <div className=\"Legend\" style={{\"top\" : this.margin.top}}>\n        <div className=\"LegendHeader\">\n          <img className=\"LegendIcon\" src={`data:image/png;base64,${metadata.icon}`} alt={metadata.name}/>\n          <div className=\"ItemName\">{metadata.name.replace(/_/g, ' ')}</div>\n        </div>\n        {/* <div className=\"Label\">{`Date: ${currentDate}`}</div> */}\n        <div className=\"Label\">{`Open: `}<span className=\"Value\">{this.gpFormat(open)}</span></div>\n        <div className=\"Label\">{`Close: `}<span className=\"Value\">{this.gpFormat(close)}</span></div>\n        <div className=\"Label\">{`High: `}<span className=\"Value\">{this.gpFormat(hi)}</span></div>\n        <div className=\"Label\">{`Low: `}<span className=\"Value\">{this.gpFormat(low)}</span></div>\n      </div>\n    );\n  }\n\n  renderPriceLegend() {\n    let { currentDate } = this.state;\n\n    if (currentDate === null) {\n      currentDate = this.props.data[this.props.data.length - 1].ts;\n    }\n\n    let curr = this.props.data.find(d => d.ts === currentDate);\n    let daily, average;\n\n    if (curr) {\n      daily = curr.daily;\n      average = curr.average;\n    }\n\n    return (\n      <div className=\"Legend\" style={{\"top\" : this.candleHeight }}>\n        <div className=\"Label Blue\">{`Daily: `}<span className=\"Value\">{this.legendFormat(daily)}</span></div>\n        <div className=\"Label Orange\">{`Average: `}<span className=\"Value\">{this.legendFormat(average)}</span></div>\n      </div>\n    );\n  }\n\n  renderVolumeLegend() {\n    let { currentDate } = this.state;\n\n    if (currentDate === null) {\n      currentDate = this.props.data[this.props.data.length - 1].ts;\n    }\n\n    let curr = this.props.data.find(d => d.ts === currentDate);\n\n    let volume = curr ? curr.volume : null;\n\n    return (\n      <div className=\"Legend\" style={{\"top\" : this.candleHeight + this.priceHeight}}>\n        <div className=\"Label LightBlue\">{`Volume: `}<span className=\"Value\">{this.legendFormat(volume)}</span></div>\n      </div>\n    );\n  }\n\n  renderTooltip() {\n    let { margin } = this;\n    let { height } = this.props;\n    let { currentDate, currentScale } = this.state;\n\n    if (currentDate === null) {\n      currentDate = this.props.data[this.props.data.length - 1].ts;\n    }\n\n    const options = {  year: 'numeric', month: 'short', day: 'numeric' };\n    options.timeZone = 'UTC';\n\n    return (\n      <div className=\"tooltip\" style={{\"left\" : currentScale(currentDate) - 50, \"top\" : height - margin.bottom - margin.xbuffer}}>\n        <span style={{\"position\": \"center\"}}>{new Date(currentDate).toLocaleDateString(\"en-US\", options)}</span>\n      </div>\n    )\n  }\n\n  renderRSILegend() {\n    let { currentDate } = this.state;\n\n    if (currentDate === null) {\n      currentDate = this.rsiData[this.rsiData.length - 1].ts;\n    }\n\n    let curr = this.rsiData.find(d => d.ts === currentDate);\n    let rsi;\n\n    if (curr) {\n      rsi = curr.value;\n    }\n\n    return (\n      <div className=\"Legend\" style={{\"top\" : this.candleHeight + this.volumeHeight + this.priceHeight}}>\n        <div className=\"Label Pink\">{`RSI: `}<span className=\"Value\">{this.legendFormat(rsi)}</span></div>\n      </div>\n    );\n  }\n\n  renderStochRSILegend() {\n    let { currentDate } = this.state;\n\n    if (currentDate === null) {\n      currentDate = this.rsiData[this.rsiData.length - 1].ts;\n    }\n\n    let curr = this.rsiData.find(d => d.ts === currentDate);\n    let rsi, stoch, d, k;\n\n    if (curr) {\n      rsi = curr.value;\n      stoch = curr.stoch;\n\n      k = curr.k;\n      d = curr.d;\n    }\n\n    if (k < 0) {\n      k = 0;\n    }\n\n    if (d < 0) {\n      d = 0;\n    }\n\n    return (\n      <div className=\"Legend\" style={{\"top\" : this.candleHeight + this.volumeHeight + this.priceHeight + this.rsiHeight }}>\n        <div className=\"Label Red\">{`STOCH RSI(k): `}<span className=\"Value\">{this.legendFormat(k)}</span></div>\n        <div className=\"Label Blue\">{`STOCH RSI(d): `}<span className=\"Value\">{this.legendFormat(d)}</span></div>\n      </div>\n    );\n  }\n\n  buildCandlestickChart(chartArea, xScale) {\n    const chartHeight = this.candleHeight - this.margin.top - this.margin.xbuffer;\n    this.candlestickChart = chartArea\n      .append(\"g\")\n      .attr(\"class\", \"candlestick-chart\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`)\n\n    this.candlestickChart.append(\"defs\").append(\"svg:clipPath\")\n      .attr(\"id\", \"candleclip\")\n      .append(\"svg:rect\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n\n    this.candlestickChart\n      .append(\"g\")\n      .attr(\"id\", \"xAxis\")\n      .attr(\"transform\", `translate(0, ${chartHeight})`)\n\n    this.candlestickChart\n      .append(\"g\")\n      .attr(\"id\", \"yAxis\")\n      .attr(\"transform\", `translate(${this.chartWidth}, 0)`)\n\n\n\n    this.updateCandlestickChart(xScale);\n  }\n\n  buildPriceChart(chartArea, xScale) {\n    const chartHeight = this.priceHeight - this.margin.xbuffer;\n    this.priceChart = chartArea\n      .append(\"g\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"transform\", `translate(${this.margin.left}, 0)`)\n\n    this.priceChart.append(\"defs\").append(\"svg:clipPath\")\n      .attr(\"id\", \"priceclip\")\n      .append(\"svg:rect\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n\n    this.priceChart\n      .append(\"g\")\n      .attr(\"id\", \"xAxis\")\n      .attr(\"transform\", `translate(0, ${chartHeight})`)\n\n    this.priceChart\n      .append(\"g\")\n      .attr(\"id\", \"yAxis\")\n      .attr(\"transform\", `translate(${this.chartWidth}, 0)`)\n\n    this.updatePriceChart(xScale);\n  }\n  \n  buildVolumeChart(chartArea, xScale) {\n    const chartHeight = this.volumeHeight- this.margin.xbuffer;\n    this.volumeChart = chartArea\n      .append(\"g\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"transform\", `translate(${this.margin.left}, 0)`)\n    \n    this.volumeChart.append(\"defs\").append(\"svg:clipPath\")\n      .attr(\"id\", \"volumeclip\")\n      .append(\"svg:rect\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n\n    this.volumeChart\n      .append(\"g\")\n      .attr(\"id\", \"xAxis\")\n      .attr(\"transform\", `translate(0, ${chartHeight})`)\n\n    this.volumeChart\n      .append(\"g\")\n      .attr(\"id\", \"yAxis\")\n      .attr(\"transform\", `translate(${this.chartWidth}, 0)`);\n\n    this.updateVolumeChart(xScale);\n  }\n\n  buildRSIChart(chartArea, xScale) {\n    const chartHeight = this.rsiHeight- this.margin.xbuffer;\n    this.rsiChart = chartArea\n      .append(\"g\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"transform\", `translate(${this.margin.left}, 0)`)\n    \n    this.rsiChart.append(\"defs\").append(\"svg:clipPath\")\n      .attr(\"id\", \"rsiclip\")\n      .append(\"svg:rect\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n\n    this.rsiChart\n      .append(\"g\")\n      .attr(\"id\", \"xAxis\")\n      .attr(\"transform\", `translate(0, ${chartHeight})`)\n\n    this.rsiChart\n      .append(\"g\")\n      .attr(\"id\", \"yAxis\")\n      .attr(\"transform\", `translate(${this.chartWidth}, 0)`);\n\n    this.updateRSIChart(xScale);\n  }\n\n  buildStochRSIChart(chartArea, xScale) {\n    const chartHeight = this.stochRsiHeight- this.margin.xbuffer;\n    this.stochRsiChart = chartArea\n      .append(\"g\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"transform\", `translate(${this.margin.left}, 0)`)\n    \n    this.stochRsiChart.append(\"defs\").append(\"svg:clipPath\")\n      .attr(\"id\", \"stochrsiclip\")\n      .append(\"svg:rect\")\n      .attr(\"width\", this.chartWidth)\n      .attr(\"height\", chartHeight)\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n\n    this.stochRsiChart\n      .append(\"g\")\n      .attr(\"id\", \"xAxis\")\n      .attr(\"transform\", `translate(0, ${chartHeight})`)\n\n    this.stochRsiChart\n      .append(\"g\")\n      .attr(\"id\", \"yAxis\")\n      .attr(\"transform\", `translate(${this.chartWidth}, 0)`);\n\n    this.updateStochRSIChart(xScale);\n  }\n\n  updateCandlestickChart(xScale) {\n    const chartHeight = this.candleHeight - this.margin.top - this.margin.xbuffer;\n    const xMin = xScale.invert(0);\n    const xMax = xScale.invert(this.chartWidth);\n    const candleData = this.candleData;\n    const visibleData = this.candleData.filter(d => d.end > xMin && d.start < xMax);\n\n    const yMin = d3.min(visibleData, d => d.low) - 5;\n    const yMax = d3.max(visibleData, d => d.high) + 5;\n    const yScale = d3\n      .scaleLinear()\n      .domain([Math.max(0, yMin), yMax])\n      .range([chartHeight, 0]);\n\n    this.candlestickChart.select(\"#xAxis\")\n      .call(d3.axisBottom(xScale)\n        .tickSize(-chartHeight)\n        .tickPadding(5)\n        .ticks(10))\n\n    this.candlestickChart.select(\"#yAxis\")\n      .call(d3.axisRight(yScale)\n        .tickFormat(this.gpFormat)\n        .tickSize(-this.chartWidth)\n        .ticks(10));\n\n    this.candlestickChart\n      .selectAll(\".candlestick\")\n      .data(candleData, d => d.id)\n      .join(\n        enter => {\n          const group = enter.append(\"g\")\n            .attr(\"class\", \"candlestick\")\n            .attr(\"clip-path\", \"url(#candleclip)\");\n          group.append(\"rect\")\n            .attr(\"fill\", d => d.close >= d.open ? this.green : this.red)\n            .attr(\"x\", d => xScale(d.start))\n            .attr(\"y\", d => yScale(Math.max(d.open, d.close)))\n            .attr(\"width\", d => (xScale(d.end) - xScale(d.start)))\n            .attr(\"height\", d => Math.max(2, Math.abs(yScale(d.open) - yScale(d.close))));\n          group.append(\"line\")\n            .attr(\"x1\", d => xScale(d.start) + (xScale(d.end) - xScale(d.start)) / 2)\n            .attr(\"x2\", d => xScale(d.start) + (xScale(d.end) - xScale(d.start)) / 2)\n            .attr(\"y1\", d => yScale(d.high))\n            .attr(\"y2\", d => yScale(d.low))\n            .attr(\"stroke-width\", d => (xScale(d.end) - xScale(d.start)) / 10)\n            .attr(\"stroke\", d => d.close >= d.open ? this.green : this.red);\n        },\n        update => {\n          update.select(\"rect\")\n            .attr(\"x\", d => xScale(d.start))\n            .attr(\"y\", d => yScale(Math.max(d.open, d.close)))\n            .attr(\"width\", d => xScale(d.end) - xScale(d.start))\n            .attr(\"height\", d => Math.max(2, Math.abs(yScale(d.open) - yScale(d.close))));\n          update.select(\"line\")\n            .attr(\"x1\", d => xScale(d.start) + (xScale(d.end) - xScale(d.start)) / 2)\n            .attr(\"x2\", d => xScale(d.start) + (xScale(d.end) - xScale(d.start)) / 2)\n            .attr(\"y1\", d => yScale(d.high))\n            .attr(\"y2\", d => yScale(d.low))\n            .attr(\"stroke-width\", d => (xScale(d.end) - xScale(d.start)) / 10);\n        },\n        exit => exit.remove()\n      )\n  }\n\n  updatePriceChart(xScale) {\n    const chartHeight = this.priceHeight - this.margin.xbuffer;\n    const xMin = xScale.invert(0 - this.margin.left);\n    const xMax = xScale.invert(this.chartWidth + this.margin.right);\n    const data = this.props.data.filter(d => d.ts > xMin && d.ts < xMax).map(d => {\n      let avg = this.smaData.find((e) => e.ts === d.ts);\n      d.average = avg.avg;\n      return d;\n    })\n    const yMin = d3.min(data, d => Math.min(d.daily, d.average)) - 5\n    const yMax = d3.max(data, d => Math.max(d.daily, d.average)) + 5\n    const yScale = d3\n      .scaleLinear()\n      .domain([Math.max(yMin, 0), yMax])\n      .range([chartHeight, 0]);\n    \n    this.priceChart.select(\"#xAxis\")\n      .call(d3.axisBottom(xScale)\n        .tickSize(-chartHeight)\n        .ticks(10))\n\n    this.priceChart.select(\"#yAxis\")\n      .call(d3.axisRight(yScale)\n        .tickFormat(this.gpFormat)\n        .tickSize(-this.chartWidth)\n        .ticks(10));\n\n    const dailyLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(d.daily));\n\n    const averageLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(d.average));\n\n    this.priceChart\n      .selectAll(\".priceLines\")\n      .data([data])\n      .join(\n        enter => {\n          const group = enter.append(\"g\")\n            .attr(\"class\", \"priceLines\")\n            .attr(\"clip-path\", \"url(#priceclip)\");\n          group.append(\"path\")\n            .attr(\"id\", \"dailyline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"steelblue\")\n            .attr(\"stroke-width\", 3.0)\n            .attr(\"d\", dailyLine)\n          group.append(\"path\")\n            .attr(\"id\", \"averageline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"goldenrod\")\n            .attr(\"stroke-width\", 3.0)\n            .attr(\"d\", averageLine)\n        },\n        update => {\n          update.select(\"#dailyline\")\n            // .transition().duration(0)    // Do we need these, was glitchy earlier but seems fine now\n            .attr(\"d\", dailyLine)\n          update.select(\"#averageline\")\n            // .transition().duration(0)\n            .attr(\"d\", averageLine)\n        },\n        exit => exit.remove()\n      )\n  }\n\n  updateRSIChart(xScale) {\n    const chartHeight = this.rsiHeight - this.margin.xbuffer;\n    const xMin = xScale.invert(0 - this.margin.left);\n    const xMax = xScale.invert(this.chartWidth + this.margin.right);\n    const data = this.rsiData.filter(d => d.ts > xMin && d.ts < xMax);\n\n    const yMin = Math.min(d3.min(data, d => d.d), d3.min(data, d => d.k)) - 5;\n    const yMax = Math.max(d3.max(data, d => d.d), d3.max(data, d => d.k)) + 5;\n\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, 100])\n      .range([chartHeight, 0]);\n    \n    this.rsiChart.select(\"#xAxis\")\n      .call(d3.axisBottom(xScale)\n      .tickSize(-chartHeight)\n      .tickPadding(5)\n      .ticks(10));\n\n    this.rsiChart.select(\"#yAxis\")\n      .call(d3.axisRight(yScale)\n      .tickFormat(this.volFormat)\n      .tickSize(-this.chartWidth)\n      .ticks(5));\n\n    const rsiLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(d.value));\n\n    const upperBoundLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(70));\n\n    const lowerBoundLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(30));\n\n    this.rsiChart\n      .selectAll(\".priceLines\")\n      .data([data])\n      .join(\n        enter => {\n          const group = enter.append(\"g\")\n            .attr(\"class\", \"priceLines\")\n            .attr(\"clip-path\", \"url(#priceclip)\");\n          group.append(\"path\")\n            .attr(\"id\", \"dailyline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"#c677dc\")\n            .attr(\"stroke-width\", 2.0)\n            .attr(\"d\", rsiLine)\n          group.append(\"path\")\n            .attr(\"id\", \"averageline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-width\", 2.0)\n            .attr(\"stroke-dasharray\", 4)\n            .style(\"opacity\", 0.5)\n            .attr(\"d\", upperBoundLine)\n          group.append(\"path\")\n            .attr(\"id\", \"averageline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-width\", 2.0)\n            .attr(\"stroke-dasharray\", 4)\n            .style(\"opacity\", 0.5)\n            .attr(\"d\", lowerBoundLine)\n        },\n        update => {\n          update.select(\"#dailyline\")\n            .attr(\"d\", rsiLine)\n        },\n        exit => exit.remove()\n      )\n  }\n\n  updateStochRSIChart(xScale) {\n    const chartHeight = this.stochRsiHeight - this.margin.xbuffer;\n    const xMin = xScale.invert(0 - this.margin.left);\n    const xMax = xScale.invert(this.chartWidth + this.margin.right);\n    const data = this.rsiData.filter(d => d.ts > xMin && d.ts < xMax);\n\n    const yMin = Math.min(d3.min(data, d => d.d), d3.min(data, d => d.k)) - 5;\n    const yMax = Math.max(d3.max(data, d => d.d), d3.max(data, d => d.k)) + 5;\n\n\n    const yScale = d3\n      .scaleLinear()\n      .domain([0, 100])\n      .range([chartHeight, 0]);\n    \n    this.stochRsiChart.select(\"#xAxis\")\n      .call(d3.axisBottom(xScale)\n      .tickSize(-chartHeight)\n      .tickPadding(5)\n      .ticks(10));\n\n    this.stochRsiChart.select(\"#yAxis\")\n      .call(d3.axisRight(yScale)\n      .tickFormat(this.volFormat)\n      .tickSize(-this.chartWidth)\n      .ticks(5));\n\n    const rsiLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(d.d));\n\n    const stochRsiLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(d.k));\n\n    const upperBoundLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(80));\n\n    const lowerBoundLine = d3.line()\n      .x(d => xScale(d.ts))\n      .y(d => yScale(20));\n\n    this.stochRsiChart\n      .selectAll(\".priceLines\")\n      .data([data])\n      .join(\n        enter => {\n          const group = enter.append(\"g\")\n            .attr(\"class\", \"priceLines\")\n            .attr(\"clip-path\", \"url(#priceclip)\");\n          group.append(\"path\")\n            .attr(\"id\", \"dailyline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"#46a4f3\")\n            .attr(\"stroke-width\", 2.0)\n            .attr(\"d\", rsiLine)\n          group.append(\"path\")\n            .attr(\"id\", \"averageline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"#d66061\")\n            .attr(\"stroke-width\", 2.0)\n            .attr(\"d\", stochRsiLine)\n          group.append(\"path\")\n            .attr(\"id\", \"averageline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-width\", 2.0)\n            .attr(\"stroke-dasharray\", 4)\n            .style(\"opacity\", 0.5)\n            .attr(\"d\", upperBoundLine)\n          group.append(\"path\")\n            .attr(\"id\", \"averageline\")\n            .attr(\"fill\", \"none\")\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-width\", 2.0)\n            .attr(\"stroke-dasharray\", 4)\n            .style(\"opacity\", 0.5)\n            .attr(\"d\", lowerBoundLine)\n        },\n        update => {\n          update.select(\"#dailyline\")\n            // .transition().duration(0)    // Do we need these, was glitchy earlier but seems fine now\n            .attr(\"d\", rsiLine)\n          update.select(\"#averageline\")\n            // .transition().duration(0)\n            .attr(\"d\", stochRsiLine)\n        },\n        exit => exit.remove()\n      )\n  }\n\n  updateVolumeChart(xScale) {\n    const chartHeight = this.volumeHeight - this.margin.xbuffer;\n    const xMin = xScale.invert(0 - this.margin.left);\n    const xMax = xScale.invert(this.chartWidth + this.margin.right);\n    const data = this.props.data\n    const visibleData = data.filter(d => d.ts > xMin && d.ts < xMax);\n    \n    const yMax = d3.max(visibleData, d=> d.volume);\n    const yScale = d3.scaleLinear()\n      .domain([0, Math.max(5, yMax)])\n      .range([chartHeight, 0]);\n\n    this.volumeChart.select(\"#xAxis\")\n      .call(d3.axisBottom(xScale)\n        .tickSize(-chartHeight)\n        .ticks(10))\n\n    this.volumeChart.select(\"#yAxis\")\n      .call(d3.axisRight(yScale)\n        .tickFormat(this.volFormat)\n        .tickSize(-this.chartWidth) \n        .ticks(6));\n\n    const bandwidth = this.chartWidth / (visibleData.length + 2);\n    this.volumeChart\n      .selectAll(\".volume_bar\")\n      .data(data, d => d.ts)\n      .join(\n        enter => enter.append(\"g\")\n          .attr(\"class\", \"volume_bar\")\n          .attr(\"clip-path\", \"url(#volumeclip)\")\n          .append(\"rect\")\n          .attr(\"fill\", \"#6395a4\")\n          .attr(\"x\", d => xScale(d.ts) - bandwidth / 2)\n          .attr(\"y\", d => yScale(d.volume))\n          .attr(\"width\", d => bandwidth)\n          .attr(\"height\", d => chartHeight - yScale(d.volume)),\n        update => update.select(\"rect\")\n          .attr(\"x\", d => xScale(d.ts) - bandwidth / 2)\n          .attr(\"y\", d => yScale(d.volume))\n          .attr(\"width\", d => bandwidth)\n          .attr(\"height\", d => chartHeight - yScale(d.volume)),\n        exit => exit.remove()\n      )\n  }\n  \n  drawChart(height) {\n    const div = d3.select(this.node.current);\n    div.selectAll(\"*\").remove();\n    const { chartWidth, margin } = this;\n    \n    const svg = div\n      .append(\"svg\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", height);\n\n    const candlestickArea = svg\n      .append(\"g\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", this.candleHeight);\n      \n    const priceArea = svg\n      .append(\"g\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", this.priceHeight)\n      .attr(\"transform\", `translate(0, ${this.candleHeight})`);\n      \n    const volumeArea = svg\n      .append(\"g\")\n      .attr(\"width\", \"100%\")\n      .attr(\"height\", this.volumeHeight)\n      .attr(\"transform\", `translate(0, ${this.candleHeight + this.priceHeight})`);\n\n    const rsiArea = svg\n      .append(\"g\")\n      .attr(\"width\", this.props.width)\n      .attr(\"height\", this.rsiHeight)\n      .attr(\"transform\", `translate(0, ${this.candleHeight + this.priceHeight + this.volumeHeight})`)\n\n    const stochRsiArea = svg\n      .append(\"g\")\n      .attr(\"width\", this.props.width)\n      .attr(\"height\", this.stochRsiHeight)\n      .attr(\"transform\", `translate(0, ${this.candleHeight + this.priceHeight + this.volumeHeight + this.rsiHeight})`)\n\n    this.buildCandlestickChart(candlestickArea, this.state.currentScale);\n    this.buildPriceChart(priceArea, this.state.currentScale);\n    this.buildVolumeChart(volumeArea, this.state.currentScale);\n    this.buildRSIChart(rsiArea, this.state.currentScale);\n    this.buildStochRSIChart(stochRsiArea, this.state.currentScale);\n\n    const crosshair = svg\n      .append(\"line\")\n      .classed(\"x\", true)\n      .style(\"fill\", \"none\")\n      .style(\"pointer-events\", \"none\")\n      .style(\"stroke\", this.text)\n      .style(\"opacity\", 0.70)\n      .style(\"stroke-width\", \"1.5px\");\n\n\n    // generateCrosshair will have the svg element bound to `this`\n    // so we must keep a reference to our node in `that`\n    const that = this;\n    const bisectDate = d3.bisector(d => d.ts).left;\n    const { data } = this.props;\n    function generateCrosshair() {\n      console.log('generateCrosshair');\n      \n      const { currentScale } = that.state;\n      const mouseX = d3.mouse(this)[0];\n      \n      if (mouseX < margin.left || mouseX > chartWidth + margin.left) {\n        crosshair.style('display', 'none');\n        return;\n      }\n      \n      const date = currentScale.invert(mouseX - margin.left);\n      const i = bisectDate(data, date, 1, data.length - 1);\n      const d0 = data[i - 1];\n      const d1 = data[i];\n      const ts = (date - d0.ts) > (d1.ts - date) ? d1.ts : d0.ts;\n      \n      that.setState({currentDate : ts})\n\n      const x = margin.left + currentScale(ts)\n      crosshair\n        .attr(\"x1\", 0)\n        .attr(\"x2\", 0)\n        .attr(\"y1\", margin.top)\n        .attr(\"y2\", height - margin.bottom)\n        .attr(\"transform\", `translate(${x}, 0)`)\n    }\n\n    crosshair\n      .on(\"mousedown\", () => console.log(\"fuck\"))\n      .on(\"mouseup\", () => console.log(\"fuck up\"))\n\n    div\n      .on(\"mousemove\", generateCrosshair)\n      .on(\"mousedown\", () => console.log(\"fuck\"))\n      .on(\"mouseup\", () => console.log(\"fuck up\"))\n      .on(\"mouseover\", () => {\n        console.log('mouseover');\n        crosshair.style(\"display\", null)\n        d3.selectAll(\".tooltip\").style(\"display\", null)\n      })\n      .on(\"mouseout\",  () => {\n        console.log('mouseout');\n        this.setState({currentDate : data[data.length - 1].ts})\n        crosshair.style(\"display\", \"none\")\n        d3.selectAll(\".tooltip\").style(\"display\", \"none\")\n      })\n\n    let zoomCrosshair = generateCrosshair.bind(svg.node())\n    const domain = this.xScale.domain()\n    const maxScale = (domain[1].getTime() - domain[0].getTime()) / (1000 * 60 * 60 * 24 * 31 * 2)\n    const zoom = d3.zoom()\n      .scaleExtent([1, maxScale])\n      .extent([[this.margin.left, this.margin.top], [this.props.width - this.margin.right, this.candleHeight - this.margin.xbuffer]])\n      .translateExtent([[this.margin.left, -Infinity], [this.props.width - this.margin.right, Infinity]])\n      .on(\"start\", () => {\n        crosshair.style(\"display\", \"none\")\n        d3.selectAll(\".tooltip\").style(\"display\", \"none\")\n      })\n      .on(\"zoom\", this.zoomed)\n      .on(\"end\", () => {\n        zoomCrosshair()\n        crosshair.style(\"display\", null)\n        d3.selectAll(\".tooltip\").style(\"display\", null)\n      })\n\n    div\n    .call(zoom)\n    .call(zoom.transform, this.transform)\n\n  }\n\n  generateRSI(data, period) {\n    let rsi = [];\n    let prices = data.map((d) => d.daily)\n\n    let avgGain = 0;\n    let avgLoss = 0;\n\n    // compute rsi\n    for (var i = 1; i < period; i++) {\n      let change = (prices[i] - prices[i-1]) / prices[i-1] * 100;\n      let gain = change >= 0 ? change : 0.0;\n      let loss = change < 0 ? (-1) * change : 0.0;\n      avgGain += gain;\n      avgLoss += loss;\n    }\n\n    avgGain /= period;\n    avgLoss /= period;\n\n    for (var index = period; index < data.length; index++) {\n      let change = (prices[index] - prices[index-1]) / prices[index-1] * 100;\n      let gain = change >= 0 ? change : 0.0;\n      let loss = change < 0 ? (-1) * change : 0.0;\n      \n      avgGain = ((avgGain) * 13 + gain) / 14;\n      avgLoss = ((avgLoss) * 13 + loss) / 14;\n      let rs = avgGain / avgLoss;\n      let val = 100 - (100 / (1 + rs));\n      rsi.push({\n        value: isNaN(val) ? 0 : val,\n        k: 0,\n        d: 0,\n        ts: data[index].ts\n      })\n    }\n\n    let stoch = StochasticRSI.calculate({values: prices, rsiPeriod: period, stochasticPeriod: period, kPeriod: 3, dPeriod: 3});\n    let startIndex = rsi.length - stoch.length;\n\n    for (var i = startIndex; i < rsi.length; i++) {\n      rsi[i].k = stoch[i - startIndex].k;\n      rsi[i].d = stoch[i - startIndex].d;\n    }\n\n    return rsi;\n  }\n\n  generateSimpleMovingAverage(data, period) {\n    let result = [];\n    let initAverage = 0;\n\n    data.forEach((d, i) => {\n      if (i < period) {\n        initAverage += d.daily\n        result.push({ts: d.ts, avg: initAverage / (i + 1)})\n      } else {\n        let win = data.slice(i - period, i);\n        let avg = win.reduce((a, b) => a + b.daily, 0) / period;\n\n        result.push({ts: d.ts, avg: avg})\n      }\n    })\n\n    return result;\n  }\n\n  generateCandlestickData(data, period) {\n    const condensed = [];\n    for (var i = 0; i < data.length - 1; i += period - 1) {\n      const frame = data.slice(i, i + period);\n      const candle = {\n        \"id\"     : i,\n        \"high\"   : d3.max(frame, d => d.daily),\n        \"low\"    : d3.min(frame, d => d.daily),\n        \"open\"   : frame[0].daily,\n        \"close\"  : frame[frame.length - 1].daily,\n        \"volume\" : frame.reduce((total, d) => total + d.volume),\n        \"start\"  : frame[0].ts,\n        \"end\"    : frame[frame.length - 1].ts\n      }\n      condensed.push(candle)\n    }\n    return condensed;\n  }\n\n  zoomed() {\n    console.log(d3.event.type);\n    \n    const transform = d3.event.transform;\n    const newXScale = transform.rescaleX(this.xScale);\n    this.updateCandlestickChart(newXScale);\n    this.updatePriceChart(newXScale);\n    this.updateVolumeChart(newXScale);\n    this.updateStochRSIChart(newXScale);\n    this.updateRSIChart(newXScale);\n    this.setState({currentScale: newXScale})\n  }\n}\n\nexport default PriceVolumeChart;\n","import React, { Component } from \"react\";\nimport \"../App.scss\";\nimport { useTable, useSortBy, usePagination } from \"react-table\";\nimport styled from \"styled-components\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { Input, Button } from '@material-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretUp, faCaretDown, faWindowMaximize, faWindowMinimize } from '@fortawesome/free-solid-svg-icons'\n\nconst PRIMARY = \"#212121\";\nconst RED = \"#d66061\";\nconst GREEN = \"#60d68a\";\nconst BG = \"#303030\";\n\nclass PriceTable extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.metadata)\n    this.metadata = props.metadata;\n    this.theme = createMuiTheme({\n      palette: {\n        primary: {500: RED},\n        type: \"dark\"\n      }\n    });\n  }\n\n  render() {\n\n    // subtract search bar, header, header, and footer heights...\n    const TABLE_HEIGHT = this.props.height - 56 - 56 - 40 - 40;\n    const TABLE_ROW_HEIGHT = 40;\n\n\n    return (\n      <div className=\"Sidebar\">\n        <ThemeProvider theme={this.theme}>\n          <div className=\"Header\">\n            <img src={'./coins.png'} className=\"HeaderImage\" alt=\"\"/>\n            <div className=\"Logo\">OSRS Watch</div>\n          </div>\n        <div className=\"SearchBarContainer\">\n          <Input\n            type=\"text\"\n            className=\"Searchbar\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Search...\"\n            onKeyDown={(e) => {\n              if (e.which === 13 && !e.shiftKey) {\n                  this.props.filterSidebar(e);\n              }\n          }}>\n\n            </Input>\n          <Button\n            onClick={this.props.toggleExpand}\n            className=\"ExpandButton\">\n              {\n                this.props.expanded ?\n                  <FontAwesomeIcon icon={faWindowMinimize}/> :\n                  <FontAwesomeIcon icon={faWindowMaximize}/>\n              }\n          </Button>\n        </div>\n          <CssBaseline />\n\n          <Table\n            data={this.props.items}\n            selected={this.props.activeItemId}\n            metadata={this.metadata}\n            onSelect={this.props.onSelect}\n            formatGp={this.props.formatGp}\n            pgSize={Math.round(TABLE_HEIGHT/TABLE_ROW_HEIGHT)}\n            expanded={this.props.expanded}\n          />\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nfunction Table({ data, metadata, onSelect, selected, formatGp, pgSize, expanded }) {\n\n  \n  const sorter = (row1, row2, id, desc) => {\n    console.log(row1);\n    console.log(row2);\n    \n  }\n\n  let formatPercentChange = (val) => {\n    let color;\n    if (val < 0) {\n      color = RED;\n    } else if (val > 0) {\n      color = GREEN;\n    } else {\n      color = \"#fff\";\n    }\n    return <span style={{\"color\" : color}}>{`${val}%`}</span>;\n  }\n  let basicColumns = [\n    {\n      Header: \"Name\",\n      accessor: \"name\",\n      Cell: row => {\n        return (\n          <div>\n            <img\n              height={24}\n              style={{ marginBottom: \"-8px\" }}\n              src={`data:image/png;base64,${row.row.original.icon}`}\n              alt=\"\"\n            />\n            {row.row.original.name}\n          </div>\n        );\n      }\n    },\n    {\n      Header: \"Price\",\n      accessor: \"daily\",\n      sortType: (row1, row2, y, z) => (row1.original.daily > row2.original.daily) ? 1 : -1,\n      Cell: ({cell: {value}}) => formatGp(value)\n      // Cell: row => {\n      //   let color = row.row.original.oneDayChange > 0 ? GREEN : RED;\n      //   let symbol = row.row.original.oneDayChange > 0 ? faCaretUp : faCaretDown;\n      //   let fontSize = 16;\n      //   if (row.row.original.oneDayChange === 0) {\n      //     color = \"steelblue\";\n      //     fontSize = 12;\n      //     symbol = null;\n      //   }\n      //   return (\n      //     <span>\n      //       {`${formatGp(row.row.original.daily)} `}\n      //       {\n      //         symbol ? \n      //           <FontAwesomeIcon icon={symbol} style={{\"color\" : color, \"fontSize\" : fontSize}}/> :\n      //           null\n      //       }\n           \n      //     </span>);\n      // }\n    },\n    {\n      Header: \"Volume\",\n      accessor: \"volume\",\n      Cell: row => formatGp(row.row.original.volume)\n    }\n  ];\n\n  let expandedColumns = [\n    {\n      Header: \"Buy Limit\",\n      accessor: \"buy_limit\",\n      Cell: ({cell: {value}}) => formatGp(value)\n    },\n    {\n      Header: \"High Alch. Value\",\n      accessor: \"high_alch\",\n      Cell: ({cell: {value}}) => formatGp(value)\n    },\n    {\n      Header: \"High Alch. Profit\",\n      accessor: \"high_alch_profit\",\n      sortType: (row1, row2, y, z) => (row1.original.high_alch_profit > row2.original.high_alch_profit) ? 1 : -1,\n      Cell: ({cell: {value}}) => formatGp(value)\n    },\n  ]\n\n  const columns = React.useMemo(\n    () => expanded ? basicColumns.concat(expandedColumns) : basicColumns,\n    [expanded, basicColumns, expandedColumns]\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    pageOptions,\n    page,\n    state: { pageIndex},\n    previousPage,\n    nextPage,\n    canPreviousPage,\n    canNextPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: pgSize}\n    },\n    useSortBy,\n    usePagination\n  );\n\n  // Render the UI for your table\n  return (\n    <>\n    <MaUTable {...getTableProps()}>\n      <TableHead>\n        {headerGroups.map(headerGroup => (\n          <TableRow {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <TableCell\n                {...column.getHeaderProps(column.getSortByToggleProps())}\n              >\n                {column.render(\"Header\")}\n                <span>\n                  {column.isSorted ? (column.isSortedDesc ? \" ↑\" : \" ↓\") : \"\"}\n                </span>\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableHead>\n      <TableBody {...getTableBodyProps()}>\n        {page.map((row, i) => {\n          prepareRow(row);\n          return (\n            <TableRow\n              className={row.original.id === selected ? \"PriceTableRow Selected\" : \"PriceTableRow\" }\n              onClick={() => {\n                onSelect(row.original.id);\n              }}\n              {...row.getRowProps()}\n            >\n              {row.cells.map(cell => {\n                return (\n                  <TableCell {...cell.getCellProps()}>\n                    {cell.render(\"Cell\")}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          );\n        })}\n      </TableBody>\n    </MaUTable>\n    <div className=\"Footer\">\n      <Button onClick={() => previousPage()} disabled={!canPreviousPage}>\n        Prev\n      </Button>\n      <div>\n        Page{' '}\n        <em>\n          {pageIndex + 1} of {pageOptions.length}\n        </em>\n      </div>\n      <Button onClick={() => nextPage()} disabled={!canNextPage}>\n        Next\n      </Button>\n\n\n    </div>\n    </>\n  );\n}\n\nexport default PriceTable;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\n\nimport * as d3 from \"d3\";\nimport PriceVolumeChart from './components/PriceVolumeChart.js';\nimport PriceTable from './components/PriceTable.js';\n\nconst TITLE_HEIGHT = 0;\nconst SIDEBAR_WIDTH = 400;\nconst ITEM_HEADER_HEIGHT = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      items: null,\n      activeItemId: null,\n      expanded: false,\n      priceData: null,\n      candleData: null,\n      sidebarItems: [],\n      filteredItems: [],\n    };\n    this.chart = React.createRef();\n    this.onResize = this.onResize.bind(this);\n    this.toggleExpand = this.toggleExpand.bind(this);\n    this.filterSidebar = this.filterSidebar.bind(this);\n    this.onSidebarSelect = this.onSidebarSelect.bind(this);\n    this.processMetadata = this.processMetadata.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.onResize, false);\n    fetch('/market_watch_api/metadata', {})\n      .then(response => response.json())\n      .then(data => this.processMetadata(data));\n    this.onResize();\n  }\n\n  toggleExpand() {\n    this.setState((prev) => ({expanded: !prev.expanded}))\n  }\n\n  onResize() {\n    this.setState(\n      { chartWidth: window.innerWidth - SIDEBAR_WIDTH,\n        chartHeight: window.innerHeight - ITEM_HEADER_HEIGHT - TITLE_HEIGHT});\n  }\n\n  processMetadata(metadata) {\n    let percentChange = (start, end) => Math.round(1000 * (start - end) / start) / 10;\n    let sidebarItems = [];\n    let itemMap = {};\n\n    let nat = metadata.find(d => d.item_id == 561)\n\n    for (let i in metadata) {\n      let item = metadata[i];\n      sidebarItems.push({\n        name: item.name,\n        average: item.price, // we could compute sma here instead?\n        daily: item.price,\n        volume: item.volume,\n        id: item.item_id,\n        icon: item.icon,\n        buy_limit: item.buy_limit,\n        high_alch: item.high_alch,\n        high_alch_profit: item.high_alch - item.price - nat.price,\n        oneDayChange: 0.5,\n        oneWeekChange: 0.5,\n        oneMonthChange: 0.5\n      });\n\n    }\n\n    // sort alphabetically on name\n    sidebarItems.sort((a,b) => (a.name > b.name) ? 1 : -1);\n\n    fetch(`/market_watch_api/prices?id=${sidebarItems[0].id}`, {})\n      .then(response => response.json())\n      .then(data => { \n\n        this.setState({\n          loading: false,\n          items: itemMap,\n          sidebarItems: sidebarItems,\n          filteredItems: sidebarItems,\n          activeItemId: sidebarItems[0].id,\n          priceData: data,\n          candleData: null\n        });\n      })\n  }\n\n  onSidebarSelect(id) {\n    fetch(`/market_watch_api/prices?id=${id}`, {})\n      .then(response => response.json())\n      .then(data => {\n        this.setState({activeItemId: id, priceData: data })\n      })\n  }\n  \n  filterSidebar(e) {\n    const text = e.target.value.toLowerCase();\n    const newItems = this.state.sidebarItems.filter(\n      item => item.name.toLowerCase().includes(text)\n    );\n    this.setState({\n      filteredItems: newItems\n    });\n  }\n\n  renderLoadingAnimation() {\n    return (\n        <div className=\"LoadingContainer\">\n            <div className=\"lds-roller\" style={{\"color\": \"black\"}}>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    );\n}\n\n  render() {\n    if (this.state.loading) {\n      return this.renderLoadingAnimation()\n    }\n\n    const { activeItemId, chartWidth, chartHeight } = this.state;\n    const metadata = this.state.sidebarItems.find((e => e.id === activeItemId));\n    const pricehistory = this.state.priceData;\n\n    const chartData = pricehistory.map((row) => ({\n      'ts': new Date(row['ts']),\n      'daily': +row['price'],\n      'average': +row['price'],         // again, we could compute sma here...\n      'volume': +row['volume']\n    }))\n\n    const gpFormat = gp => `${d3.format('.3~s')(gp)} gp`;\n    const volFormat = d3.format('.3~s');\n    const { expanded } = this.state;\n\n    return (\n      <div className=\"Wrapper\">\n        <div className={expanded ? \"Container Expanded\" : \"Container\"}>\n          <PriceTable\n            items={this.state.filteredItems}\n            metadata={this.state.sidebarItems}\n            filterSidebar={this.filterSidebar}\n            activeItemId={this.state.activeItemId}\n            onSelect={this.onSidebarSelect}\n            expanded={this.state.expanded}\n            toggleExpand={this.toggleExpand}\n            formatGp={volFormat}\n            height={chartHeight}/>\n          <div className={expanded ? \"Content Expanded\" : \"Content\"}>\n            <div className=\"ChartContainer\" ref={this.chart} style={{margin: 0, position: \"relative\"}}>\n              <PriceVolumeChart metadata={metadata}\n                                data={chartData}\n                                width={chartWidth}\n                                height={chartHeight} />\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}